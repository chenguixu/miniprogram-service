<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poetry.mapper.PoetMapper">
  <resultMap id="BaseResultMap" type="com.poetry.entity.Poet">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="NUM" jdbcType="VARCHAR" property="num" />
    <result column="TYPE" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, NAME, DESCRIPTION, NUM, TYPE
  </sql>

  <select id="selectPoetNumByName" parameterType="java.lang.String" resultType="java.lang.String">
    select NUM from poet where NAME=#{name} limit 0,1
  </select>

  <select id="getPoetNameByNum" parameterType="java.lang.String" resultType="java.lang.String">
    select NAME from poet where NUM=#{num} limit 0,1
  </select>


  <select id="getPoetByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select  * from  poet where  NAME = #{name}
  </select>

  <select id="getPoetByNum" parameterType="java.lang.String" resultMap="BaseResultMap">
      select  * from  poet where  NUM=#{num}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from poet
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from poet
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.poetry.entity.Poet">
    insert into poet (ID, NAME, DESCRIPTION, 
      NUM, TYPE)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{num,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.poetry.entity.Poet">
    insert into poet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="num != null">
        NUM,
      </if>
      <if test="type != null">
        TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poetry.entity.Poet">
    update poet
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        NUM = #{num,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poetry.entity.Poet">
    update poet
    set NAME = #{name,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      NUM = #{num,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>